import { Component, OnInit } from '@angular/core';
import { PropertyTransactionsService } from '../../services/property-transactions.service';
import { LoginService } from '../../services/login.service';
import { FormGroup, FormControl, Validators } from '@angular/forms';
import { Users } from '../../models/users';


@Component({
  selector: 'app-property-transactions',
  templateUrl: './property-transactions.component.html',
  styleUrl: './property-transactions.component.css'
})
export class PropertyTransactionsComponent implements OnInit {

  transactionForm!: FormGroup;

  constructor(private transactionService: PropertyTransactionsService, private loginService: LoginService) { }

  ngOnInit(): void {
    this.transactionForm = new FormGroup({
      'buyerEmail': new FormControl(null, [Validators.required, Validators.email]),
      'propertyId': new FormControl(null, Validators.required),
      'saleRentPrice': new FormControl(null, Validators.required),
      'transactionDate': new FormControl(null, Validators.required)
    });
  }

  onSubmit() {
    if (this.transactionForm.valid) {
      const buyerEmail = this.transactionForm.value.buyerEmail;
      if (buyerEmail) {
        this.loginService.getUserByEmail(buyerEmail).subscribe((buyer: Users) => {
          const sellerEmail = localStorage.getItem('email');
          if (sellerEmail) {
            this.loginService.getUserByEmail(sellerEmail).subscribe((seller: Users) => {
              const transactionData = {
                transactionid: null, // This will be auto-generated by the backend
                property: {
                  propertyid: this.transactionForm.value.propertyId
                  // Other property details will be fetched by the backend using propertyid
                },
                buyertenant: {
                  userid: buyer.userid
                },
                salerentprice: this.transactionForm.value.saleRentPrice,
                transactiondate: this.transactionForm.value.transactionDate,
                sellerid: seller.userid
              };
              this.transactionService.addTransaction(transactionData).subscribe(
                response => console.log('Transaction added!', response),
                error => console.error('Error!', error)
              );
            });
          }
        });
      }
    }
  }

}
